
export type DruidSign = {
  id: string;
  name: string;
  emoji: string;
  description: string;
  // –ö–∞–∂–¥—ã–π –∑–Ω–∞–∫ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–≤–∞ –∏–ª–∏ —Ç—Ä–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ø–±–ª–æ–Ω—è)
  ranges: { start: string; end: string }[];
};

// –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è 5 –∑–Ω–∞–∫–æ–≤ (–¥–æ–±–∞–≤–∏—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏):
export const DRUID_SIGNS: DruidSign[] = [
  {
    id: "beech",
    name: "–ë—É–∫",
    emoji: "‚ùÑÔ∏è",
    description: `–ë—É–∫ (21 –¥–µ–∫–∞–±—Ä—è ‚Äì –î–µ–Ω—å –∑–∏–º–Ω–µ–≥–æ —Å–æ–ª–Ω—Ü–µ—Å—Ç–æ—è–Ω–∏—è). –°–∏–º–≤–æ–ª –º—É–¥—Ä–æ—Å—Ç–∏, —Å—Ç–æ–π–∫–æ—Å—Ç–∏ –∏ –∑–∏–º–Ω–µ–π —Å–æ–∑–µ—Ä—Ü–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –û–ª–∏—Ü–µ—Ç–≤–æ—Ä—è–µ—Ç –≤–µ–ª–∏—á–∏–µ, —Ä–∞—Å—Å—É–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å–≤—è–∑—å —Å –¥—Ä–µ–≤–Ω–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏.`,
    ranges: [{ start: "12-21", end: "12-21" }],
  },
  {
    id: "apple",
    name: "–Ø–±–ª–æ–Ω—è",
    emoji: "üçé",
    description: `–Ø–±–ª–æ–Ω—è (22 –¥–µ–∫–∞–±—Ä—è ‚Äì 1 —è–Ω–≤–∞—Ä—è –∏ 22 –∏—é–Ω—è ‚Äì 4 –∏—é–ª—è). –°–∏–º–≤–æ–ª –ª—é–±–≤–∏, –∏–∑–æ–±–∏–ª–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –õ—é–¥–∏ —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞ ‚Äî –¥—É—à–µ–≤–Ω—ã–µ, –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–µ.`,
    ranges: [
      { start: "12-22", end: "01-01" },
      { start: "06-22", end: "07-04" },
    ],
  },
  {
    id: "fir",
    name: "–ü–∏—Ö—Ç–∞ (–µ–ª—å)",
    emoji: "üéÑ",
    description: `–ü–∏—Ö—Ç–∞ (2 ‚Äì 11 —è–Ω–≤–∞—Ä—è –∏ 5 ‚Äì 14 –∏—é–ª—è). –°–∏–º–≤–æ–ª —Å–≤–µ—Ç–∞, –≤–µ—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–∞–¥–µ–∂–¥—ã. –û—Ç–ª–∏—á–∞—é—Ç—Å—è –∞–º–±–∏—Ü–∏–æ–∑–Ω–æ—Å—Ç—å—é, —Å–∞–º–æ–æ—Ç–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç—å—é –∏ –ø—Ä–æ–Ω–∏—Ü–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é.`,
    ranges: [
      { start: "01-02", end: "01-11" },
      { start: "07-05", end: "07-14" },
    ],
  },
  {
    id: "elm",
    name: "–í—è–∑",
    emoji: "‚öñÔ∏è",
    description: `–í—è–∑ (12 ‚Äì 24 —è–Ω–≤–∞—Ä—è –∏ 15 ‚Äì 25 –∏—é–ª—è). –°–∏–º–≤–æ–ª —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏.`,
    ranges: [
      { start: "01-12", end: "01-24" },
      { start: "07-15", end: "07-25" },
    ],
  },
  {
    id: "cypress",
    name: "–ö–∏–ø–∞—Ä–∏—Å",
    emoji: "ü§ù",
    description: `–ö–∏–ø–∞—Ä–∏—Å (25 —è–Ω–≤–∞—Ä—è ‚Äì 3 —Ñ–µ–≤—Ä–∞–ª—è –∏ 26 –∏—é–ª—è ‚Äì 4 –∞–≤–≥—É—Å—Ç–∞). –°–∏–º–≤–æ–ª –≤–µ—Ä–Ω–æ—Å—Ç–∏, —É–º–µ–Ω–∏—è –ø—Ä–∏—Å–ø–æ—Å–∞–±–ª–∏–≤–∞—Ç—å—Å—è, —Å–º–µ–ª–æ—Å—Ç–∏.`,
    ranges: [
      { start: "01-25", end: "02-03" },
      { start: "07-26", end: "08-04" },
    ],
  },
  // >> –ù–∏–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –∑–Ω–∞–∫–æ–≤ <<
  {
    id: "oak",
    name: "–î—É–±",
    emoji: "üå≥",
    description: `–î—É–± (21 –º–∞—Ä—Ç–∞ ‚Äì –≤–µ—Å–µ–Ω–Ω–µ–µ —Ä–∞–≤–Ω–æ–¥–µ–Ω—Å—Ç–≤–∏–µ). –°–∏–º–≤–æ–ª —Å–∏–ª—ã, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏, –º—É–∂–µ—Å—Ç–≤–∞ –∏ –±–ª–∞–≥–æ—Ä–æ–¥—Å—Ç–≤–∞. –õ—é–¥–∏-–î—É–±—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã, —á–µ—Å—Ç–Ω—ã, –æ–±–ª–∞–¥–∞—é—Ç –≤—ã—Å–æ–∫–∏–º —á—É–≤—Å—Ç–≤–æ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞. –ò–º —á–∞—Å—Ç–æ –¥–æ–≤–µ—Ä—è—é—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ, –∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å—Ç–µ—Ä–∂–µ–Ω—å –ø–æ–º–æ–≥–∞–µ—Ç –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å –ª—é–±—ã–µ –±—É—Ä–∏ –∂–∏–∑–Ω–∏.`,
    ranges: [{ start: "03-21", end: "03-21" }],
  },
  {
    id: "hazel",
    name: "–û—Ä–µ—à–Ω–∏–∫",
    emoji: "üå∞",
    description: `–û—Ä–µ—à–Ω–∏–∫ (22 ‚Äì 31 –º–∞—Ä—Ç–∞ –∏ 24 —Å–µ–Ω—Ç—è–±—Ä—è ‚Äì 3 –æ–∫—Ç—è–±—Ä—è). –°–∏–º–≤–æ–ª –∏–Ω—Ç—É–∏—Ü–∏–∏, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –≥–∏–±–∫–æ—Å—Ç–∏ –º—ã—à–ª–µ–Ω–∏—è. –û—Ä–µ—à–Ω–∏–∫–∏ –Ω–µ–æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–æ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω—ã, —Å–ø–æ—Å–æ–±–Ω—ã –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –º—ã—à–ª–µ–Ω–∏—é, —á–∞—Å—Ç–æ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø–µ—Ä–≤–æ–æ—Ç–∫—Ä—ã–≤–∞—Ç–µ–ª—è–º–∏ –∏–ª–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏ –ª–∏–¥–µ—Ä–∞–º–∏.`,
    ranges: [
      { start: "03-22", end: "03-31" },
      { start: "09-24", end: "10-03" },
    ],
  },
  {
    id: "rowan",
    name: "–†—è–±–∏–Ω–∞",
    emoji: "üçí",
    description: `–†—è–±–∏–Ω–∞ (1 ‚Äì 10 –∞–ø—Ä–µ–ª—è –∏ 4 ‚Äì 13 –æ–∫—Ç—è–±—Ä—è). –°–∏–º–≤–æ–ª –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è, —Ç–æ–Ω–∫–æ–π –¥—É—Ö–æ–≤–Ω–æ—Å—Ç–∏ –∏ —Å–∞–º–æ–æ—Ç–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏. –õ—é–¥–∏-–†—è–±–∏–Ω—ã –∏—Å–∫—Ä–µ–Ω–Ω–∏, —É–º–µ—é—Ç –¥–æ –∫–æ–Ω—Ü–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ–∫—Ä—É–∂–∞—é—â–∏—Ö, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å —Å–≤–æ–∏–º —Å–≤–µ—Ç–ª—ã–º –≤–∑–≥–ª—è–¥–æ–º –Ω–∞ –∂–∏–∑–Ω—å, —Å–∫–ª–æ–Ω–Ω—ã –∫ –∞–ª—å—Ç—Ä—É–∏–∑–º—É.`,
    ranges: [
      { start: "04-01", end: "04-10" },
      { start: "10-04", end: "10-13" },
    ],
  },
  {
    id: "maple",
    name: "–ö–ª—ë–Ω",
    emoji: "üçÅ",
    description: `–ö–ª—ë–Ω (11 ‚Äì 20 –∞–ø—Ä–µ–ª—è –∏ 14 ‚Äì 23 –æ–∫—Ç—è–±—Ä—è). –°–∏–º–≤–æ–ª —Å–∞–º–æ–±—ã—Ç–Ω–æ—Å—Ç–∏, –∂–∏–≤–æ—Å—Ç–∏ —É–º–∞, –∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –õ—é–¥–∏-–ö–ª—ë–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã, –æ—Ç–∫—Ä—ã—Ç—ã –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—é, –Ω–µ —Ç–µ—Ä–ø—è—Ç –æ–¥–Ω–æ–æ–±—Ä–∞–∑–∏—è, –ª–µ–≥–∫–æ –ø–µ—Ä–µ–Ω–∏–º–∞—é—Ç –Ω–æ–≤–æ–µ, —á–∞—Å—Ç–æ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø–µ—Ä–≤—ã–º–∏ –≤ –º–æ–¥–µ –∏–ª–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏—è—Ö.`,
    ranges: [
      { start: "04-11", end: "04-20" },
      { start: "10-14", end: "10-23" },
    ],
  },
  // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ 16 –∑–Ω–∞–∫–æ–≤ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ø–æ —Ç–æ–º—É –∂–µ –ø—Ä–∏–Ω—Ü–∏–ø—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ ...
];


/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ö–æ–¥–∏—Ç –ª–∏ –¥–∞—Ç–∞ (–º–µ—Å—è—Ü-–¥–µ–Ω—å) –º–µ–∂–¥—É start –∏ end (start –∏ end –º–æ–≥—É—Ç –±—ã—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –≥–æ–¥–∞—Ö)
 */
function isInRange(date: string, start: string, end: string): boolean {
  // date, start, end —Ñ–æ—Ä–º–∞—Ç–∞ MM-DD –∏–ª–∏ DD-MM, –∑–¥–µ—Å—å –ø—Ä–∏–≤–µ–¥—ë–º –≤—Å—ë –∫ MM-DD.
  // –ï—Å–ª–∏ –ø–µ—Ä–∏–æ–¥ –Ω–µ –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç —Å–º–µ–Ω—É –≥–æ–¥–∞:
  if (start <= end) {
    return date >= start && date <= end;
  }
  // –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ù–æ–≤—ã–π –≥–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä: 12-22 - 01-01
  return date >= start || date <= end;
}

/**
 * –ù–∞—Ö–æ–¥–∏—Ç –∑–Ω–∞–∫ –¥—Ä—É–∏–¥—Å–∫–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –ø–æ –¥–∞—Ç–µ
 * @param birth - –¥–∞—Ç–∞ JS Date
 * @returns DruidSign | null
 */
export function getDruidSign(birth: Date): DruidSign | null {
  const m = birth.getMonth() + 1;
  const d = birth.getDate();
  // –§–æ—Ä–º–∞—Ç MM-DD —Å –≤–µ–¥—É—â–∏–º 0
  const md = `${m.toString().padStart(2, "0")}-${d.toString().padStart(2, "0")}`;
  for (const sign of DRUID_SIGNS) {
    for (const { start, end } of sign.ranges) {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 12-22 - 01-01 –∏–ª–∏ 07-05 - 07-14)
      if (isInRange(md, start, end)) return sign;
    }
  }
  return null;
}
