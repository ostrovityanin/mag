
// –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø VK –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò
console.log("üöÄ –°–¢–ê–†–¢ –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø - –°–ê–ú–û–ï –†–ê–ù–ù–ï–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï");
console.log("–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:", new Date().toISOString());
console.log("Document ready state:", document.readyState);
console.log("Location FULL:", window.location.href);
console.log("User Agent FULL:", navigator.userAgent);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ VK –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —Å–∞–º–æ–º —Ä–∞–Ω–Ω–µ–º —ç—Ç–∞–ø–µ
console.log("=== –†–ê–ù–ù–Ø–Ø VK –ü–†–û–í–ï–†–ö–ê ===");
console.log("window.vkBridge –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç:", !!window.vkBridge);
console.log("window.VKWebAppInit –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç:", !!window.VKWebAppInit);
console.log("–í iframe:", window !== window.top);
console.log("Referrer:", document.referrer);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ VK —Å–≤–æ–π—Å—Ç–≤–∞ –≤ window
const allVKProps = Object.keys(window).filter(key => key.toLowerCase().includes('vk'));
console.log("–í—Å–µ VK —Å–≤–æ–π—Å—Ç–≤–∞ –≤ window:", allVKProps);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ VK
const hasVKParams = window.location.href.includes('vk_');
console.log("–ï—Å—Ç—å VK –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ URL:", hasVKParams);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º User Agent –Ω–∞ VK –ø–æ–¥–ø–∏—Å–∏
const isVKUserAgent = /VKMA|VKApp|VK\//.test(navigator.userAgent);
console.log("VK –ø–æ–¥–ø–∏—Å—å –≤ User Agent:", isVKUserAgent);

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—é (–µ—Å–ª–∏ –µ—Å—Ç—å)
if (window.parent && window.parent !== window) {
  try {
    console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—é...");
    window.parent.postMessage({
      type: 'vk_app_early_check',
      timestamp: Date.now(),
      userAgent: navigator.userAgent,
      url: window.location.href
    }, '*');
    console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
  } catch (e) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—é:", e);
  }
}

// –°–ª—É—à–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
window.addEventListener('message', (event) => {
  console.log("üì® –ü–û–õ–£–ß–ï–ù–û –°–û–û–ë–©–ï–ù–ò–ï:", {
    origin: event.origin,
    data: event.data,
    timestamp: new Date().toISOString()
  });
});

import React from 'react';
import { createRoot } from 'react-dom/client';
import App from './App.tsx';
import './index.css';

// –ë–∞–∑–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log("=== VK MINI APP STARTING ===");
console.log("Location:", window.location.href);
console.log("User Agent:", navigator.userAgent);
console.log("Document ready state:", document.readyState);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ VK –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if (typeof window !== "undefined") {
  console.log("Window object available");
  console.log("VK Bridge check:", {
    vkBridge: !!window.vkBridge,
    VKWebAppInit: !!window.VKWebAppInit,
    userAgent: navigator.userAgent
  });
}

const rootElement = document.getElementById("root");
if (!rootElement) {
  console.error("‚ùå Root element not found!");
} else {
  console.log("‚úÖ Root element found, creating React app...");
  
  createRoot(rootElement).render(
    <React.StrictMode>
      <App />
    </React.StrictMode>
  );
  
  console.log("‚úÖ React app created and rendered");
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
setTimeout(() => {
  console.log("=== APP STATUS AFTER 1 SECOND ===");
  console.log("Document ready state:", document.readyState);
  console.log("Root content length:", rootElement?.innerHTML?.length || 0);
  console.log("VK Bridge still available:", !!window.vkBridge);
  console.log("App mounted successfully:", !!rootElement?.querySelector('[data-app-mounted]'));
}, 1000);

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
setTimeout(() => {
  console.log("=== APP STATUS AFTER 5 SECONDS ===");
  console.log("Document ready state:", document.readyState);
  console.log("Current visible content:", document.body.innerText.substring(0, 200));
  console.log("VK –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫:", {
    vkBridge: !!window.vkBridge,
    VKWebAppInit: !!window.VKWebAppInit,
    allVKProps: Object.keys(window).filter(key => key.toLowerCase().includes('vk'))
  });
}, 5000);
